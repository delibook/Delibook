{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC7AC\\uC6D0\\\\Desktop\\\\\\uC9C0\\uBBFC\\\\DKU\\\\3-2\\\\\\uCEA1\\uC2A4\\uD1A4\\\\Delibook\\\\capstone-expo\\\\src\\\\components\\\\Button.js\";\n\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport PropTypes from 'prop-types';\nvar TRANSPARENT = 'transparent';\nvar Container = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  align-items: center;\\n  border-radius: 4px;\\n  width: 100%;\\n  padding: 10px;\\n  opacity: \", \";\\n\"])), function (_ref) {\n  var theme = _ref.theme,\n      isFilled = _ref.isFilled;\n  return isFilled ? theme.buttonBackground : TRANSPARENT;\n}, function (_ref2) {\n  var disabled = _ref2.disabled;\n  return disabled ? 0.5 : 1;\n});\nvar Title = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  height: 30px;\\n  line-height: 30px;\\n  font-size: 16px;\\n  color: \", \";\\n\"])), function (_ref3) {\n  var theme = _ref3.theme,\n      isFilled = _ref3.isFilled;\n  return isFilled ? theme.buttonTitle : theme.buttonUnfilledTitle;\n});\n\nvar Button = function Button(_ref4) {\n  var containerStyle = _ref4.containerStyle,\n      title = _ref4.title,\n      onPress = _ref4.onPress,\n      isFilled = _ref4.isFilled,\n      disabled = _ref4.disabled;\n  return React.createElement(Container, {\n    style: containerStyle,\n    onPress: onPress,\n    isFilled: isFilled,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    isFilled: isFilled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nButton.defaultProps = {\n  isFilled: true\n};\nButton.propTypes = {\n  containerStyle: PropTypes.object,\n  title: PropTypes.string,\n  onPress: PropTypes.func.isRequired,\n  isFilled: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nexport default Button;","map":{"version":3,"sources":["C:/Users/김재원/Desktop/지민/DKU/3-2/캡스톤/Delibook/capstone-expo/src/components/Button.js"],"names":["React","styled","PropTypes","TRANSPARENT","Container","TouchableOpacity","theme","isFilled","buttonBackground","disabled","Title","Text","buttonTitle","buttonUnfilledTitle","Button","containerStyle","title","onPress","defaultProps","propTypes","object","string","func","isRequired","bool"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,WAAW,GAAG,aAApB;AAEA,IAAMC,SAAS,GAAGH,MAAM,CAACI,gBAAV,2MACO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,QAAV;AAAA,SAClBA,QAAQ,GAAGD,KAAK,CAACE,gBAAT,GAA4BL,WADlB;AAAA,CADP,EAOF;AAAA,MAAGM,QAAH,SAAGA,QAAH;AAAA,SAAmBA,QAAQ,GAAG,GAAH,GAAS,CAApC;AAAA,CAPE,CAAf;AAUA,IAAMC,KAAK,GAAGT,MAAM,CAACU,IAAV,0JAIA;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,MAAUC,QAAV,SAAUA,QAAV;AAAA,SACPA,QAAQ,GAAGD,KAAK,CAACM,WAAT,GAAuBN,KAAK,CAACO,mBAD9B;AAAA,CAJA,CAAX;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,QAA4D;AAAA,MAAzDC,cAAyD,SAAzDA,cAAyD;AAAA,MAAzCC,KAAyC,SAAzCA,KAAyC;AAAA,MAAlCC,OAAkC,SAAlCA,OAAkC;AAAA,MAAzBV,QAAyB,SAAzBA,QAAyB;AAAA,MAAfE,QAAe,SAAfA,QAAe;AACzE,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEM,cADT;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,QAAQ,EAAEV,QAHZ;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BS,KAA5B,CANF,CADF;AAUD,CAXD;;AAaAF,MAAM,CAACI,YAAP,GAAsB;AACpBX,EAAAA,QAAQ,EAAE;AADU,CAAtB;AAIAO,MAAM,CAACK,SAAP,GAAmB;AACjBJ,EAAAA,cAAc,EAAEb,SAAS,CAACkB,MADT;AAEjBJ,EAAAA,KAAK,EAAEd,SAAS,CAACmB,MAFA;AAGjBJ,EAAAA,OAAO,EAAEf,SAAS,CAACoB,IAAV,CAAeC,UAHP;AAIjBhB,EAAAA,QAAQ,EAAEL,SAAS,CAACsB,IAJH;AAKjBf,EAAAA,QAAQ,EAAEP,SAAS,CAACsB;AALH,CAAnB;AAQA,eAAeV,MAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components/native';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TRANSPARENT = 'transparent';\r\n\r\nconst Container = styled.TouchableOpacity`\r\n  background-color: ${({ theme, isFilled }) =>\r\n    isFilled ? theme.buttonBackground : TRANSPARENT};\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\r\n`;\r\n\r\nconst Title = styled.Text`\r\n  height: 30px;\r\n  line-height: 30px;\r\n  font-size: 16px;\r\n  color: ${({ theme, isFilled }) =>\r\n    isFilled ? theme.buttonTitle : theme.buttonUnfilledTitle};\r\n`;\r\n\r\nconst Button = ({ containerStyle, title, onPress, isFilled, disabled }) => {\r\n  return (\r\n    <Container\r\n      style={containerStyle}\r\n      onPress={onPress}\r\n      isFilled={isFilled}\r\n      disabled={disabled}\r\n    >\r\n      <Title isFilled={isFilled}>{title}</Title>\r\n    </Container>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  isFilled: true,\r\n};\r\n\r\nButton.propTypes = {\r\n  containerStyle: PropTypes.object,\r\n  title: PropTypes.string,\r\n  onPress: PropTypes.func.isRequired,\r\n  isFilled: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}