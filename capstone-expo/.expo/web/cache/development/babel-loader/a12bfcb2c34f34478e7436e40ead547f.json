{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC7AC\\uC6D0\\\\Desktop\\\\\\uC9C0\\uBBFC\\\\DKU\\\\3-2\\\\\\uCEA1\\uC2A4\\uD1A4\\\\Delibook\\\\capstone-expo\\\\src\\\\screens\\\\login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useEffect, useContext, useCallback } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Image, Input, Button } from \"../components\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { validateEmail, removeWhitespace } from \"../utils/common\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { ProgressContext } from \"../contexts\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  align-items: center;\\n  background-color: \", \";\\n  padding: 0 20px;\\n  padding-top: \", \"px;\\n  padding-bottom: \", \"px;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.background;\n}, function (_ref2) {\n  var top = _ref2.insets.top;\n  return top;\n}, function (_ref3) {\n  var bottom = _ref3.insets.bottom;\n  return bottom;\n});\nvar ErrorText = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  align-items: flex-start;\\n  width: 100%;\\n  height: 20px;\\n  margin-bottom: 10px;\\n  line-height: 20px;\\n  color: \", \";\\n\"])), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.errorText;\n});\n\nvar Login = function Login(_ref5) {\n  var navigation = _ref5.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      disabled = _useState8[0],\n      setDisabled = _useState8[1];\n\n  var _useContext = useContext(ProgressContext),\n      spinner = _useContext.spinner;\n\n  var passwordRef = useRef();\n  var insets = useSafeAreaInsets();\n  useEffect(function () {\n    setDisabled(!(email && password && !errorMessage));\n  }, [email, password, errorMessage]);\n\n  var _handleEmailChange = function _handleEmailChange(email) {\n    var changedEmail = removeWhitespace(email);\n    setEmail(changedEmail);\n    setErrorMessage(validateEmail(changedEmail) ? '' : '이메일 형식이 잘못되었습니다.');\n  };\n\n  var _handleLoginButtonPress = useCallback(function _callee() {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            spinner.start();\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post('http://localhost:3000/delibook/user/login', {\n              email: {\n                email: email\n              },\n              password: {\n                email: email\n              }\n            }).then(function (response) {\n              alert(response);\n            }.catch(function (error) {\n              alert(error);\n            })));\n\n          case 4:\n            data = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(email);\n\n          case 10:\n            _context.prev = 10;\n            spinner.stop();\n            return _context.finish(10);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7, 10, 13]], Promise);\n  }, [email, password]);\n\n  return React.createElement(KeyboardAwareScrollView, {\n    contentContainerStyle: {\n      flex: 1\n    },\n    extraScrollHeight: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    insets: insets,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    imageStyle: {\n      borderRadius: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    onChangeText: _handleEmailChange,\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordRef.current.focus();\n    },\n    placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    ref: passwordRef,\n    label: \"Password\",\n    value: password,\n    onChangeText: _handlePasswordChange,\n    onSubmitEditing: _handleLoginButtonPress,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    returnKeyType: \"done\",\n    isPassword: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(ErrorText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, errorMessage), React.createElement(Button, {\n    title: \"\\uB85C\\uADF8\\uC778\",\n    onPress: _handleLoginButtonPress,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n    onPress: function onPress() {\n      return navigation.navigate('Join');\n    },\n    isFilled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/김재원/Desktop/지민/DKU/3-2/캡스톤/Delibook/capstone-expo/src/screens/login.js"],"names":["React","useState","useRef","useEffect","useContext","useCallback","axios","styled","Image","Input","Button","KeyboardAwareScrollView","validateEmail","removeWhitespace","useSafeAreaInsets","ProgressContext","Container","View","theme","background","top","insets","bottom","ErrorText","Text","errorText","Login","navigation","email","setEmail","password","setPassword","errorMessage","setErrorMessage","disabled","setDisabled","spinner","passwordRef","_handleEmailChange","changedEmail","_handleLoginButtonPress","start","post","then","response","alert","catch","error","data","stop","flex","borderRadius","current","focus","_handlePasswordChange","navigate"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext,useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { Image, Input, Button } from '../components';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { validateEmail, removeWhitespace } from '../utils/common';\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\r\nimport { ProgressContext } from '../contexts';\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 0 20px;\r\n  padding-top: ${({ insets: { top } }) => top}px;\r\n  padding-bottom: ${({ insets: { bottom } }) => bottom}px;\r\n`;\r\n\r\nconst ErrorText = styled.Text`\r\n  align-items: flex-start;\r\n  width: 100%;\r\n  height: 20px;\r\n  margin-bottom: 10px;\r\n  line-height: 20px;\r\n  color: ${({ theme }) => theme.errorText};\r\n`;\r\n\r\nconst Login = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [disabled, setDisabled] = useState(true);\r\n  const { spinner } = useContext(ProgressContext);\r\n  const passwordRef = useRef();\r\n  const insets = useSafeAreaInsets();\r\n\r\n  useEffect(() => {\r\n    setDisabled(!(email && password && !errorMessage));\r\n  }, [email, password, errorMessage]);\r\n\r\n  const _handleEmailChange = (email) => {\r\n    const changedEmail = removeWhitespace(email);\r\n    setEmail(changedEmail);\r\n    setErrorMessage(\r\n      validateEmail(changedEmail) ? '' : '이메일 형식이 잘못되었습니다.',\r\n    );\r\n  };\r\n\r\n  const _handleLoginButtonPress = useCallback(async() => {\r\n    try {\r\n      spinner.start();\r\n      const data = await axios.post('http://localhost:3000/delibook/user/login', {\r\n        email: {email},\r\n        password: {email}\r\n      })\r\n      .then(function (response) {\r\n        alert(response);\r\n      }\r\n      .catch(function(error) {\r\n        alert(error);\r\n      }));\r\n    } catch (e) {\r\n      alert(email);\r\n    } finally {\r\n      spinner.stop();\r\n    }\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <KeyboardAwareScrollView\r\n      contentContainerStyle={{ flex: 1 }}\r\n      extraScrollHeight={20}\r\n    >\r\n      <Container insets={insets}>\r\n        <Image imageStyle={{ borderRadius: 8 }} />\r\n        <Input\r\n          label=\"Email\"\r\n          value={email}\r\n          onChangeText={_handleEmailChange}\r\n          onSubmitEditing={() => passwordRef.current.focus()}\r\n          placeholder=\"이메일을 입력하세요\"\r\n          returnKeyType=\"next\"\r\n        />\r\n        <Input\r\n          ref={passwordRef}\r\n          label=\"Password\"\r\n          value={password}\r\n          onChangeText={_handlePasswordChange}\r\n          onSubmitEditing={_handleLoginButtonPress}\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n          returnKeyType=\"done\"\r\n          isPassword\r\n        />\r\n        <ErrorText>{errorMessage}</ErrorText>\r\n        <Button\r\n          title=\"로그인\"\r\n          onPress={_handleLoginButtonPress}\r\n          disabled={disabled}\r\n        />\r\n        <Button\r\n          title=\"회원가입\"\r\n          onPress={() => navigation.navigate('Join')}\r\n          isFilled={false}\r\n        />\r\n      </Container>\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}